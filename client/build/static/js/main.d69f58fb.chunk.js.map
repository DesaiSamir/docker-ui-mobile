{"version":3,"sources":["dockericon.png","App.js","components/Containers/State.js","lib/axios.js","stores/Containers/Containers.js","stores/BaseStore.js","components/common/FullscreenDialog.js","components/Containers/ContainerCard.js","components/Containers/Containers.js","Router.js","service/serviceWorker.js","index.js","stores/AppStore.js"],"names":["module","exports","__webpack_require__","p","styles","root","flexGrow","paper","paddingBottom","overflowY","WebkitOverflowScrolling","title","avatar","margin","menuButton","marginLeft","marginRight","appLogo","height","animation","footer","width","position","bottom","boxShadow","actionButton","padding","body","header","textAlign","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","event","scrollTop","target","itemTranslate","Math","min","setState","transform","handleChange","value","handleToggle","theme","state","createMuiTheme","palette","type","typography","useNextVariants","classes","bodyHeight","appHeights","contentHeight","headerHeight","appHeaderHeight","react_default","a","createElement","core_styles","index_es","className","elevation","style","alt","src","logo","variant","color","onClick","bind","Icon_default","top","onScroll","children","onChange","showLabel","label","icon","icons_index_es","component","Link","to","Component","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","StateContent","_this$props","Icon","aria-label","classNames","iconVariant","React","backgroundColor","green","dark","primary","amber","opacity","message","display","alignItems","http","axios","create","baseURL","interceptors","response","use","res","err","location","BrowserRouter","getCurrentLocation","status","push","concat","encodeURIComponent","pathname","search","hash","Promise","reject","ellipsify","string","length","substr","STATE","CREATED","RUNNING","PAUSED","RESTARTING","REMOVING","EXITED","DEAD","Containers","containers","destroyContainer","_callee","id","regenerator_default","wrap","_context","prev","next","setError","delete","loadContainers","t0","stop","inspectContainer","_callee2","_context2","get","sent","inspect","data","_callee3","_context3","sortBy","container","Created","map","ports","Ports","PrivatePort","Type","IP","PublicPort","join","names","Names","n","toLowerCase","slice","Id","id_full","image","Image","command","Command","command_full","created","moment","unix","fromNow","Status","ports_full","names_full","State","pruneContainers","_callee4","_context4","post","renameContainer","_callee5","name","_context5","put","restartContainer","_callee6","_context6","startContainer","_callee7","_context7","setTimeout","stopContainer","_callee8","_context8","killContainer","_callee9","_context9","pauseContainer","_callee10","_context10","unpauseContainer","_callee11","_context11","getContainerLogs","_callee12","_context12","abrupt","replace","arguments","undefined","closeInspector","FullScreenDialog","createMarkup","htmlText","__html","renderLogs","logs","renderlogs","innerHtml","dangerouslySetInnerHTML","console","renderDetails","secondary","scrollToBottom","el","scrollIntoView","behavior","_this2","handleClose","window","innerHeight","renderDialog","appBar","Close_default","flex","ref","objectSpread","button","fontFamily","fontStyle","fontSize","background","wordWrap","Transition","assign","direction","ContainerCard","anchorEl","open","alert","dialogAction","dialogTitle","dialogMessage","containerStore","then","setInterval","handleAlertOpen","handleMenu","currentTarget","handleClickOpen","renderItemState","_this$state","Boolean","disabled","cardWidth","innerWidth","card","action","aria-owns","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","onClose","inset","noWrap","fullScreen","TransitionComponent","FullscreenDialog","keepMounted","aria-labelledby","aria-describedby","actions","red","menuItem","&:focus","main","& $primary, & $icon","common","white","containersStore","confirm","e","preventDefault","stateCounter","stateChanged","prompt","loadColors","count","colors","i","exist","randomMC","getColor","shades","includes","appStore","store","log","containerView","progress","size","thickness","spacing","justify","key","item","Containers_ContainerCard","text","minHeight","unit","cardAction","cardContent","toggle","marginBottom","errorStyle","deepOrange900","underlineStyle","borderColor","teal900","floatingLabelStyle","floatingLabelFocusStyle","floatingButton","zIndex","marginTop","right","content","contentForm","teal500","raisedButton","elementStyle","loading","paddingTop","minWidth","bullet","pos","appFooterHeight","Router","index_module","src_App","path","Route","exact","render","components_Containers_Containers","hostname","match","require","WebFont","load","google","families","ReactDOM","Router_Router","AppStore","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d69f58fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dockericon.26667176.png\";","import React, { Component } from 'react';\nimport logo from './dockericon.png';\nimport './styles/App.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Toolbar, AppBar, Paper, BottomNavigation, Avatar, Typography, BottomNavigationAction, IconButton } from '@material-ui/core';\nimport { Subtitles, PhotoLibrary, Storage, SettingsRemote } from '@material-ui/icons';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles'\nimport Icon from '@material-ui/core/Icon';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    paddingBottom: 50,\n    overflowY: 'scroll',\n    WebkitOverflowScrolling: 'touch',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  avatar: {\n    margin: 10,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appLogo: {\n    height: 40,\n    animation: 'App-logo-spin infinite 20s linear'\n  },\n  footer: {\n    flexGrow: 1,\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    paddingBottom: 10,\n    boxShadow: '0 -4px 10px 0px rgba(0,0,0,0.8)',\n  },\n  actionButton: {\n    padding: '16px 0',\n  },\n  body: {\n    overflowY: 'scroll',\n    WebkitOverflowScrolling: 'touch',\n    position: 'relative',\n  },\n  header: {\n    position: 'fixed',\n    width: '100%',\n    textAlign: 'center',\n    boxShadow: '0 4px 10px 0px rgba(0,0,0,0.8)',\n  }\n};\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      value: 0,\n      theme: 'dark',\n      transform: null,\n    }\n  }\n\n  handleScroll = (event) => {\n      let scrollTop = event.target.scrollTop,\n          itemTranslate = Math.min(0, scrollTop/3 - 60);\n\n      this.setState({\n        transform: itemTranslate\n      });\n  }\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleToggle = (event) => { \n    var theme = 'dark'\n    \n    if(this.state.theme === 'dark')\n      theme = 'light'\n\n    this.setState({ theme });\n  };\n\n  render() {\n    var theme = createMuiTheme({\n      palette: {\n          type: this.state.theme,\n      },\n      typography: {\n          useNextVariants: true,\n        },\n    });\n\n    const { classes } = this.props;\n    const { value } = this.state;\n    var bodyHeight = this.props.appHeights.contentHeight\n    var headerHeight = this.props.appHeights.appHeaderHeight\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Paper className={classes.root} elevation={1}>\n          <AppBar position=\"static\" style={styles.header}> \n            <Toolbar>\n              <Avatar alt=\"docker-ui\" src={logo} className={classes.avatar} />\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                Docker UI\n              </Typography>\n              <IconButton onClick={this.handleToggle.bind(this)}>\n                <Icon>lightbulb</Icon>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Paper className={classes.body} elevation={1} style={{height: bodyHeight, top: headerHeight}} onScroll={this.handleScroll}>\n            {this.props.children}\n          </Paper>\n          <BottomNavigation value={value} onChange={this.handleChange} className={classes.footer}>\n            <BottomNavigationAction\n              className={classes.actionButton}\n              showLabel\n              label=\"Containers\"\n              icon={<Subtitles/>}\n              component={Link}\n              to=\"/containers\"\n              />\n            <BottomNavigationAction\n              className={classes.actionButton}\n              showLabel\n              label=\"Images\"\n              icon={<PhotoLibrary/>}\n              component={Link}\n              to=\"/images\"\n              />\n            <BottomNavigationAction\n              className={classes.actionButton}\n              showLabel\n              label=\"Network\"\n              icon={<SettingsRemote/>}\n              component={Link}\n              to=\"/networks\"\n              />\n            <BottomNavigationAction\n              className={classes.actionButton}\n              showLabel\n              label=\"Volumes\"\n              icon={<Storage/>}\n              component={Link}\n              to=\"/volumes\"\n              />\n          </BottomNavigation>\n        </Paper>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {green, amber} from '@material-ui/core/colors';\nimport {Avatar} from '@material-ui/core';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n  const styles = theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      // fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n      color: 'white',\n    },\n  });\n  \nclass StateContent extends React.Component {\n  \n  render(){\n    const { classes, className, variant} = this.props;\n    // const firstLetter = message.charAt(0).toUpperCase();\n    const Icon = variantIcon[variant];\n\n    return (\n      <Avatar aria-label=\"Recipe\" className={classNames(classes[variant], className)}>\n        <Icon className={classNames(classes.icon, classes.iconVariant)} />\n      </Avatar>\n    );\n  }\n}\nStateContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n  \nexport default withStyles(styles)(StateContent);","import axios from 'axios'\nimport {BrowserRouter} from 'react-router-dom'\n\nconst http = axios.create({\n  baseURL: '/api/v1/',\n})\n\n// Intercept http to redirect to login on unauthorized response\nhttp.interceptors.response.use(res => res, err => {\n  const location = BrowserRouter.getCurrentLocation()\n  if (err.response && err.response.status === 403) {\n    return BrowserRouter.push(`/login?redirect=${encodeURIComponent(location.pathname+location.search+location.hash)}`)\n  }\n\n  return Promise.reject(err)\n})\n\nexport default http\n","import axios from '../../lib/axios'\nimport {sortBy} from 'lodash'\nimport moment from 'moment'\nimport BaseStore from '../BaseStore'\n\nconst ellipsify = string => {\n  return string.length > 40 ? `${string.substr(0, 37)}...` : string\n}\n\nexport const STATE = {\n  CREATED: 'created',\n  RUNNING: 'running',\n  PAUSED: 'paused',\n  RESTARTING: 'restarting',\n  REMOVING: 'removing',\n  EXITED: 'exited',\n  DEAD: 'dead',\n}\n\nexport default class Containers extends BaseStore {\n  containers = []\n\n  destroyContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.delete(`containers/${id}`)\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  inspectContainer = async id => {\n    this.setError()\n\n    try {\n      const res = await axios.get(`containers/${id}/inspect`)\n      this.inspect = res.data\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  loadContainers = async () => {\n    this.setError()\n\n    try {\n      const res = await axios.get('containers')\n\n      this.containers = sortBy(res.data, container => -container.Created).map(container => {\n        const ports = sortBy(container.Ports, p => `${p.PrivatePort}/${p.Type}`).map(p => `${(p.IP || '') && `${p.IP || ''}:${p.PublicPort || ''}->`}${p.PrivatePort}/${p.Type}`).join(', ')\n        const names = sortBy(container.Names, n => n.toLowerCase()).map(n => n.slice(1)).join(', ')\n\n        return {\n          id: container.Id.substr(0, 12),\n          id_full: container.Id,\n          image: container.Image,\n          command: ellipsify(container.Command),\n          command_full: container.Command,\n          created: moment.unix(container.Created).fromNow(),\n          status: container.Status,\n          ports: ellipsify(ports),\n          ports_full: ports,\n          names: ellipsify(names),\n          names_full: names,\n          state: container.State,\n        }\n      })\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  pruneContainers = async () => {\n    this.setError()\n\n    try {\n      await axios.post('containers/prune')\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  renameContainer = async (id, name) => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/rename`, {name: name})\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  restartContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/restart`)\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  startContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/start`)\n      setTimeout(() => this.loadContainers(), 5000);\n      // this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  stopContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/stop`)\n      setTimeout(() => this.loadContainers(), 5000);\n      \n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  killContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/kill`)\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  pauseContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/pause`)\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  unpauseContainer = async id => {\n    this.setError()\n\n    try {\n      await axios.put(`containers/${id}/unpause`)\n      this.loadContainers()\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n\n  getContainerLogs = async id => {\n    this.setError()\n\n    try {\n      const res = await axios.get(`containers/${id}/logs`)\n      return res.data.message.replace(/\\r\\n/g, \"<br />\")\n    }\n    catch(e) {\n      this.setError(e)\n    }\n  }\n}\n","\nexport default class BaseStore {\n\n  setError = (err = null) => {\n    this.error = (((err || {}).response || {}).data || {}).message || (err || {}).message || err\n  }\n\n  closeInspector = () => {\n    this.inspect = null\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Card, CardContent, Typography, IconButton, Toolbar, AppBar, Divider, List, ListItem, ListItemText, Button } from '@material-ui/core';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'fixed',\n  },\n  flex: {\n    flex: 1,\n    ...theme.typography.button,\n  },\n  body: {\n    overflowY: 'scroll',\n    WebkitOverflowScrolling: 'touch',\n    position: 'relative',\n  },\n  console: {\n    fontFamily: 'monospace',\n    fontStyle: 'normal',\n    fontSize: 11,\n    background: 'black',\n    color: 'white',\n    wordWrap: 'break-word',\n  },\n});\n\nclass FullScreenDialog extends React.Component {\n\n    componentDidUpdate() {\n        if(this.props.type === 'logs')\n            this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        if (this.el)\n            this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    createMarkup = (htmlText) => {\n        return {__html: htmlText};\n    }\n\n    renderLogs = (logs, classes) => {\n        var renderlogs = (\n            <div></div>\n        );\n        if(logs !== \"\"){\n            const innerHtml = this.createMarkup(logs)\n            renderlogs = (\n                <div>\n                    <Typography component=\"p\" dangerouslySetInnerHTML={innerHtml} className={classes.console} />\n                </div>\n            );\n        }\n        return(renderlogs);\n    }\n\n    renderDetails = (data) => {\n        var details = (\n            <List>\n                <ListItem>\n                    <ListItemText primary=\"Name\" secondary={data.names} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"Id\" secondary={data.id} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"Command\" secondary={data.command} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"Image\" secondary={data.image} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"Ports\" secondary={data.ports} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"Status\" secondary={data.status} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary=\"State\" secondary={data.state} />\n                </ListItem>\n            </List>\n        );\n    \n        return details;\n    }\n\n    render() {\n        const { classes, container, type, handleClose, logs, color } = this.props;\n        var headerHeight = this.props.appHeaderHeight\n        var bodyHeight = window.innerHeight - this.props.appHeaderHeight;\n        var renderDialog = this.renderDetails(container);\n        if(type === 'logs'){\n            renderDialog = this.renderLogs(logs, classes);\n        }\n\n        return (\n            <div>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                    <IconButton color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"h2\" className={classes.flex}>\n                        {type}\n                    </Typography>\n                    <Button color=\"inherit\" onClick={handleClose}>\n                        CLOSE\n                    </Button>\n                    </Toolbar>\n                </AppBar>\n                <Card className={classes.body}  style={{height: bodyHeight, top: headerHeight, backgroundColor: color}}>\n                    <CardContent>\n                        {renderDialog}\n                    </CardContent>\n                    <div ref={el => { this.el = el; }} />\n                </Card>\n            </div>\n            \n        );\n    }\n}\n\nFullScreenDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  container: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n  logs: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default withStyles(styles)(FullScreenDialog);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport StateContent from './State';\nimport {STATE} from '../../stores/Containers/Containers';\nimport { Menu, Typography, IconButton, CardHeader, Card, MenuItem, Button, Dialog, Slide, ListItemIcon, ListItemText, DialogContent, DialogContentText, DialogActions, DialogTitle } from '@material-ui/core';\nimport FullscreenDialog from '../common/FullscreenDialog'\nimport { setInterval } from 'timers';\nimport  \n    { \n        PlayArrow as StartIcon, \n        Stop as StopIcon, \n        Replay as RestartIcon, \n        Info as DetailsIcon, \n        LibraryBooks as LogsIcon, \n        Report as KillIcon,\n        Clear as CloseIcon,\n        MoreVert as MoreVertIcon\n    } from '@material-ui/icons';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n  \nconst styles = theme => ({\n    card: {\n        // width: 170,\n    },\n    actions: {\n        display: 'flex',\n    },\n    container: {\n        ...theme.typography.button,\n        padding: '8px 0 8px 0',\n        margin: 0,\n    },\n    button: {\n        padding: 0,\n        margin: 0,\n        width: '100%'\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    menuItem: {\n        '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& $primary, & $icon': {\n            color: theme.palette.common.white,\n        },\n        },\n    },\n    primary: {},\n    icon: {},\n});\n\nclass ContainerCard extends React.Component {\n    state = { \n        anchorEl: null, \n        open: false,\n        alert: false,\n        type: 'details',\n        logs: '',\n        dialogAction: null,\n        dialogTitle: null,\n        dialogMessage: null,\n    };\n\n    getContainerLogs = (type, id) => {\n        this.setState({ \n            open: true,\n            anchorEl: null,\n            type,\n        });\n        this.props.containerStore.getContainerLogs(id)\n            .then(res => {\n                this.setState({\n                    logs: res\n                })\n            })\n\n        setInterval(() => {\n            if(this.state.type === \"logs\")\n                this.props.containerStore.getContainerLogs(id)\n                    .then(res => {\n                        this.setState({\n                            logs: res\n                        })\n                    })\n        }, 3000);\n    }\n\n    handleAlertOpen = (dialogAction, dialogTitle, dialogMessage) => {\n        this.setState({ \n            open: false,\n            alert: true,\n            dialogAction,\n            dialogTitle,\n            dialogMessage,\n        });\n    };\n\n    handleMenu = event => {\n      this.setState({ anchorEl: event.currentTarget });\n    };\n  \n    handleClose = () => {\n        this.setState({ \n            anchorEl: null,\n            open: false,\n            type: 'details',\n        });\n    };\n\n    handleClickOpen = (type) => {\n        this.setState({ \n            open: true,\n            anchorEl: null,\n            type,\n        });\n    }\n\n    renderItemState = (state,classes) => {\n        \n        var message = \"\"\n        var variant = \"\"\n        switch (state) {\n        case STATE.CREATED:\n            message = \"created\"\n            variant = \"info\"\n            break;\n\n        case STATE.RUNNING:\n            message = \"running\"\n            variant = \"success\"\n            break;\n        \n        case STATE.PAUSED:\n            message = \"paused\"\n            variant = \"warning\"\n            break;\n\n        case STATE.RESTARTING:\n            message = \"restarting\"\n            variant = \"warning\"\n            break;\n        \n        case STATE.REMOVING:\n            message = \"removing\"\n            variant = \"error\"\n            break;\n        \n        case STATE.EXITED:\n            message = \"exited\"\n            variant = \"error\"\n            break;\n\n        case STATE.DEAD:\n            message = \"dead\"\n            variant = \"error\"\n            break;\n\n        default:\n            break;\n        }\n\n        var itemState =(\n        <StateContent\n            variant={variant}\n            className={classes.margin}\n            message={message}\n            />\n        );\n\n        return itemState;\n    }\n\n    render() {\n        const { classes, container, color } = this.props;\n        const { anchorEl, dialogAction, dialogMessage, dialogTitle } = this.state;\n        const open = Boolean(anchorEl);\n        var disabled = false;\n        var cardWidth = window.innerWidth - 10;\n\n        if(container.names.toLowerCase() === 'dockerui'){\n            disabled = true;\n        }\n        return (\n            <Card className={classes.card} style={{width: cardWidth, backgroundColor: color}}>\n                <CardHeader\n                avatar={this.renderItemState(container.state, classes)}\n                action={\n                    <div>\n                        <IconButton\n                            aria-owns={open ? 'menu-appbar' : undefined}\n                            aria-haspopup=\"true\"\n                            onClick={this.handleMenu}\n                            color=\"inherit\"\n                        >\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{vertical: 'top', horizontal: 'right',}}\n                            transformOrigin={{vertical: 'top', horizontal: 'right',}}\n                            open={open}\n                            onClose={this.handleClose}\n                        >\n                            <MenuItem onClick={() => \n                                    this.handleClickOpen('details')\n                                }>\n                                <ListItemIcon className={classes.icon}>\n                                    <DetailsIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Details\" />\n                            </MenuItem>\n                            <MenuItem onClick={() => \n                                    this.getContainerLogs('logs', container.names)\n                                }>\n                                <ListItemIcon className={classes.icon}>\n                                    <LogsIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Logs\" />\n                            </MenuItem>\n                            <MenuItem disabled={disabled} onClick={() => {\n                                    this.handleAlertOpen(() => {\n                                        this.props.startContainer(container.names)\n                                        this.setState({alert: false})\n                                        this.getContainerLogs('logs', container.names)\n                                    },\n                                    'Start Container',\n                                    `Are you sure you want to start container ${container.names}?`)\n                                    this.handleClose()\n                                }}>\n                                <ListItemIcon className={classes.icon}>\n                                    <StartIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Start\" />\n                            </MenuItem>\n                            <MenuItem disabled={disabled} onClick={() => {\n                                    this.handleAlertOpen(() => {\n                                        this.props.stopContainer(container.names)\n                                        this.setState({alert: false})\n                                    },\n                                    'Stop Container',\n                                    `Are you sure you want to stop container ${container.names}?`)\n                                    this.handleClose()\n                                }}>\n                                <ListItemIcon className={classes.icon}>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Stop\" />\n                            </MenuItem>\n                            <MenuItem onClick={() => {\n                                    this.handleAlertOpen(() => {\n                                        this.props.containerStore.restartContainer(container.names)\n                                        this.setState({alert: false})\n                                        this.getContainerLogs('logs', container.names)\n                                    },\n                                    'Restart Container',\n                                    `Are you sure you want to restart container ${container.names}?`)\n                                    this.handleClose()\n                                }}>\n                                <ListItemIcon className={classes.icon}>\n                                    <RestartIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Restart\" />\n                            </MenuItem>\n                            <MenuItem disabled={disabled} onClick={() => {\n                                    this.handleAlertOpen(() => {\n                                        this.props.containerStore.killContainer(container.names)\n                                        this.setState({alert: false})\n                                    },\n                                    'Kill Container',\n                                    `Are you sure you want to kill container ${container.names}?`)\n                                    this.handleClose()\n                                }}>\n                                <ListItemIcon className={classes.icon}>\n                                    <KillIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Kill\" />\n                            </MenuItem>\n                            <MenuItem onClick={() => {\n                                    this.handleClose()\n                                }}>\n                                <ListItemIcon className={classes.icon}>\n                                    <CloseIcon />\n                                </ListItemIcon>\n                                <ListItemText classes={{ primary: classes.primary }} inset primary=\"Close\" />\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                    }\n                    title={\n                        <Button className={classes.button} onClick={() => this.handleClickOpen('details')}>\n                            <Typography variant=\"h6\" component=\"h2\" noWrap className={classes.container}>\n                                {container.names}\n                            </Typography>\n                        </Button>\n                    }\n                />\n                <Dialog\n                    fullScreen\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    TransitionComponent={Transition}\n                    style={{backgroundColor: color}}\n                    >\n                    <FullscreenDialog \n                        container={container} \n                        logs={this.state.logs} \n                        handleClose={this.handleClose} \n                        type={this.state.type} \n                        {...this.props.appHeights} \n                        color={color}\n                    />\n                </Dialog>\n                <Dialog\n                    open={this.state.alert}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\" style={{backgroundColor: color}}>\n                        {dialogTitle}\n                    </DialogTitle>\n                    <DialogContent style={{backgroundColor: color}}>\n                        <DialogContentText id=\"alert-dialog-slide-description\" >\n                            {dialogMessage}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.setState({alert: false})} style={{color: color}}>\n                            Disagree\n                        </Button>\n                        <Button onClick={dialogAction} style={{color: color}}>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Card>\n        );\n    }\n}\n\nContainerCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  containerStore: PropTypes.object.isRequired,\n  container: PropTypes.object.isRequired,\n  startContainer: PropTypes.func,\n  stopContainer: PropTypes.func,\n  color: PropTypes.string,\n};\n\nexport default withStyles(styles)(ContainerCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContainerCard from './ContainerCard';\nimport { withStyles } from '@material-ui/core/styles';\nimport {teal500, teal900, deepOrange900} from 'material-ui/styles/colors';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport randomMC from 'random-material-color';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 10,\n  },\n  paper: {\n    color: theme.palette.text.secondary,\n    width: 100,\n    minHeight: 100,\n    padding: 10,\n  },\n  margin: {\n    bottom: 8,\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  container: {\n    ...theme.typography.button,\n    backgroundColor: theme.palette.common.white,\n    padding: '8px 0 8px 0',\n  },\n  cardAction: {\n    padding: '8px 0px'\n  },\n  cardContent: {\n    padding: '16px 4px'\n  },\n  toggle: {\n      marginBottom: 16,\n      textAlign: 'left',\n  },\n  errorStyle: {\n      textAlign: 'left',\n      color: deepOrange900,\n  },\n  underlineStyle: {\n      borderColor: teal900,\n      textAlign: 'left',\n  },\n  floatingLabelStyle: {\n      color: teal900,\n  },\n  floatingLabelFocusStyle: {\n      color: \"white\",\n  },\n  floatingButton: {\n      position: 'fixed',\n      zIndex: 2,\n      marginTop: -68,\n      right: 5,\n  },\n  content: {\n      height: '100%'\n  },\n  contentForm: {\n      textAlign: 'left',\n      backgroundColor: teal500,\n  },\n  raisedButton: {\n      margin: 12,\n      width: '40%',\n      backgroundColor: deepOrange900\n  },\n  elementStyle: {\n      textAlign: 'left',\n  },\n  loading:{\n      paddingTop: '50%'\n  },\n  card: {\n    minWidth: 250,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nclass Containers extends React.Component {\n\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      stateChanged: 0,\n      containers: [],\n      colors: [],\n    };\n\n    this.appStore = props.store\n    this.containersStore = this.appStore.containers\n  }\n\n  handleChange(){\n    console.log(\"Container's Changed!\")\n  }\n\n  componentDidMount() {\n    this.loadContainers()\n  }\n\n  closeInspector = () => {\n    this.containersStore.closeInspector()\n  }\n\n  destroyContainer = id => {\n    if (window.confirm(`Are you sure you want to delete container ${id}`)) {\n      this.containersStore.destroyContainer(id)\n    }\n  }\n\n  inspectContainer = (e, id) => {\n    e.preventDefault()\n\n    this.containersStore.inspectContainer(id)\n  }\n\n  loadContainers = () => {\n    this.containersStore.loadContainers()\n      .then(res => {\n        const stateCounter = this.state.stateChanged + 1\n        this.setState({\n          stateChanged: stateCounter\n        })\n      })\n    \n    setInterval(() => {\n      this.containersStore.loadContainers()\n        .then(res => {\n          const stateCounter = this.state.stateChanged + 1\n          this.setState({\n            stateChanged: stateCounter\n          })\n        })\n    }, 10000);\n  }\n\n  pauseContainer = id => {\n    if (window.confirm(`Are you sure you want to pause container ${id}?`)) {\n      this.containersStore.pauseContainer(id)\n    }\n  }\n\n  unpauseContainer = id => {\n    if (window.confirm(`Are you sure you want to unpause container ${id}?`)) {\n      this.containersStore.unpauseContainer(id)\n    }\n  }\n\n  renameContainer = container => {\n    const name = prompt('What would you like the new name to be?', container.names)\n\n    if (name) {\n      this.containersStore.renameContainer(container.id, name)\n    }\n  }\n\n  restartContainer = id => {\n      this.containersStore.restartContainer(id)\n  }\n\n  startContainer = id => {\n      this.containersStore.startContainer(id)\n  }\n\n  stopContainer = id => {\n      this.containersStore.stopContainer(id)\n  }\n\n  killContainer = id => {\n      this.containersStore.killContainer(id)\n  }\n\n  loadColors = count => {\n    var colors = []\n    for (let i = 0; i < count; i++) {\n      var exist = true;\n      while (exist) {\n        var color;\n        if(exist){\n          color = randomMC.getColor({ shades: ['500', '600'] });\n        }\n        exist = colors.includes(color);\n      }\n      colors.push(color);\n    }\n    return colors\n  }\n  \n  render() {\n    const {containers} = this.containersStore\n    const { classes } = this.props;\n\n    var containerView = (\n      <div className={classes.progress} >\n        <CircularProgress size={80} thickness={5} color=\"secondary\"/>\n      </div>\n    );\n    \n    if(containers.length > 0){\n      var colors = this.state.colors;\n      if(colors.length === 0){\n        colors = this.loadColors(containers.length);\n        this.setState({\n          colors: colors,\n        })\n      }\n      containerView = (\n        <div className={classes.root}>\n          <Grid container spacing={8} justify='space-evenly'>\n            {containers.map((container, i) => (\n              <Grid key={container.id} item >\n                <ContainerCard \n                  containerStore={this.containersStore} \n                  container={container} \n                  appHeights={this.props.appHeights} \n                  startContainer={this.startContainer.bind(this)}\n                  stopContainer={this.stopContainer.bind(this)}\n                  color={colors[i]}\n                  />\n              </Grid>\n            ))}\n          </Grid>\n        </div>);\n    }\n    return containerView;\n  }\n}\n\nContainers.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Containers);\n","import {Provider} from 'mobx-react'\nimport React from 'react'\nimport {BrowserRouter as ReactRouter, Route} from 'react-router-dom'\nimport App from './App'\nimport Containers from './components/Containers/Containers'\n// import Login from './components/Login/Login'\n// import Images from './components/Images/Images'\n// import Volumes from './components/Volumes/Volumes'\n// import Networks from './components/Networks/Networks'\n\nconst appHeights = {\n    appHeaderHeight : 66,\n    appFooterHeight : 66,\n    contentHeight: window.innerHeight - 130\n};\n\nexport default class Router extends React.Component {\n\n    render() {\n        return (\n            <Provider store={this.props.store}>\n                <ReactRouter>\n                    <App path=\"/\" appHeights={appHeights} store={this.props.store}>\n                        <Route exact path=\"/\" render={(props) => <Containers {...props} appHeights={appHeights} store={this.props.store}/>} />\n                        <Route path=\"/containers\" render={(props) => <Containers {...props} appHeights={appHeights} store={this.props.store}/>} />\n                        {/* <Route path=\"login\" component={Login} />\n                        <Route path=\"images\" component={Images} />\n                        <Route path=\"volumes\" component={Volumes} />\n                        <Route path=\"networks\" component={Networks} /> */}\n                    </App>\n                </ReactRouter>\n            </Provider>\n        )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router'\nimport './styles/index.css';\nimport AppStore from './stores/AppStore';\nimport WebFont from 'webfontloader';\nimport * as serviceWorker from './service/serviceWorker';\nrequire('babel-polyfill')\n\nWebFont.load({\n    google: {\n      families: ['Titillium Web:300,400,700', 'sans-serif', 'Lucida Console', 'Lucida Sans Typewriter', 'monospace', 'monaco', 'Bitstream Vera Sans Mono']\n    }\n});\n\nReactDOM.render(\n    <Router store={new AppStore()} />,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// import Login from './Login/Login'\nimport Containers from './Containers/Containers'\n// import Images from './Images/Images'\n// import Volumes from './Volumes/Volumes'\n// import Networks from './Networks/Networks'\n\nexport default class AppStore {\n  constructor() {\n    // this.login = new Login(this)\n    this.containers = new Containers()\n    // this.images = new Images(this)\n    // this.volumes = new Volumes(this)\n    // this.networks = new Networks(this)\n  }\n}\n"],"sourceRoot":""}