{"version":3,"sources":["App.js","service/serviceWorker.js","index.js","logo.svg"],"names":["containerIcon","react_default","a","createElement","FontIcon_default","className","imageIcon","volumeIcon","networkIcon","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","select","index","setState","selectedIndex","state","response","post","responseToPost","callApi","asyncToGenerator","regenerator_default","mark","_callee","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","_this2","styles","height","appHeights","contentHeight","header","appHeaderHeight","Paper_default","AppBar_default","title","style","titleStyle","iconElementLeft","src","logo","alt","appLogo","children","BottomNavigation","footer","Link","to","label","icon","onClick","Component","animation","backgroundColor","boxShadow","overflowY","WebkitOverflowScrolling","fontFamily","fontSize","textShadow","Boolean","window","location","hostname","match","appFooterHeight","pageHeaderHeight","pageFooterHeight","tableHeight","innerHeight","routes","BrowserRouter","MuiThemeProvider_default","muiTheme","getMuiTheme","lightBaseTheme","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6c396f57.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './styles/App.css';\nimport { Link } from 'react-router-dom';\nimport AppBar from 'material-ui/AppBar';\nimport FontIcon from 'material-ui/FontIcon';\nimport {BottomNavigation, BottomNavigationItem} from 'material-ui/BottomNavigation';\nimport Paper from 'material-ui/Paper';\n\nconst containerIcon = <FontIcon className=\"material-icons\">subtitles</FontIcon>;\nconst imageIcon = <FontIcon className=\"material-icons\">photo_library</FontIcon>;\nconst volumeIcon = <FontIcon className=\"material-icons\">storage</FontIcon>;\nconst networkIcon = <FontIcon className=\"material-icons\">settings_remote</FontIcon>;\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      selectedIndex: 0\n    }\n  }\n\n  select = (index) => this.setState({selectedIndex: index});\n\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  componentDidMount() {\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch('/api/v1/containers');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  render() {\n    styles.body.height = this.props.appHeights.contentHeight\n    styles.header.height = this.props.appHeights.appHeaderHeight\n\n    return (\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n      <Paper>\n        <AppBar \n          title=\"DockerUI\"\n          style={styles.header}\n          titleStyle={styles.titleStyle}\n          iconElementLeft={ <img src={logo} alt=\"logo\" style={styles.appLogo}/> }>\n        </AppBar>        \n        <Paper style={styles.body}>\n          {this.props.children}\n        </Paper>\n        <BottomNavigation selectedIndex={this.state.selectedIndex} style={styles.footer} >\n          <Link to=\"/Home\">\n            <BottomNavigationItem\n              label=\"Containers\"\n              icon={containerIcon}\n              onClick={() => this.select(0)} />\n          </Link>\n          <Link to=\"/Images\">\n            <BottomNavigationItem\n              label=\"Images\"\n              icon={imageIcon}\n              onClick={() => this.select(1)} />\n          </Link>\n          <Link to=\"/Netowrk\">\n            <BottomNavigationItem\n              label=\"Network\"\n              icon={networkIcon}\n              onClick={() => this.select(2)} />\n          </Link>\n          <Link to=\"/Volume\">\n            <BottomNavigationItem\n              label=\"Volumes\"\n              icon={volumeIcon}\n              onClick={() => this.select(3)} />\n          </Link>\n        </BottomNavigation>\n      </Paper>\n    );\n  }\n}\n\nexport default App;\n\nconst styles = {\n  appLogo: {\n    height: 40,\n    animation: 'App-logo-spin infinite 20s linear'\n  },\n  footer: {\n    backgroundColor: '#26C6DA',\n    boxShadow: '0 -4px 10px 0px rgba(0,0,0,0.8)',\n  },\n  body: {\n    backgroundColor: '#009688',\n    overflowY: 'scroll',\n    WebkitOverflowScrolling: 'touch',\n  },\n  header: {\n    boxShadow: '0 4px 10px 0px rgba(0,0,0,0.8)',\n    fontFamily: 'MAGNETOB',\n  },\n  titleStyle: {\n    fontSize: '3em',\n    textShadow: 'rgb(0, 0, 0) 3px 3px 0px',\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport {\n    BrowserRouter as Router,\n    Route\n  } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './service/serviceWorker';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n// import darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\nimport lightBaseTheme from 'material-ui/styles/baseThemes/lightBaseTheme';\n\nconst appHeights = {\n    appHeaderHeight : 56,\n    appFooterHeight : 56,\n    pageHeaderHeight: 0,\n    pageFooterHeight: 0,\n    tableHeight: 115,\n    contentHeight: window.innerHeight - 112\n};\n\nconst routes = <Router>\n        <MuiThemeProvider muiTheme={getMuiTheme(lightBaseTheme)}>\n            <App appHeights={appHeights}>\n                {/* <Route exact path=\"/\" render={(props) => <Home {...props} appHeights={appHeights}/>} />\n                <Route path=\"/Home\" render={(props) => <Home {...props} appHeights={appHeights}/>} />\n                <Route path=\"/About\" render={(props) => <About {...props} appHeights={appHeights}/>} />\n                <Route path=\"/Category\" render={(props) => <Category {...props} appHeights={appHeights}/>} />\n                <Route path=\"/Expense\" render={(props) => <Expense {...props} appHeights={appHeights}/>} /> */}\n            </App>\n        </MuiThemeProvider>\n    </Router>;\n\nReactDOM.render(\n    routes,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}